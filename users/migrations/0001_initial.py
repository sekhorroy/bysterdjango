# Generated by Django 3.1 on 2020-08-11 13:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MtAdminUser',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now=True, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, null=True)),
                ('ip_address', models.CharField(max_length=50)),
                ('user_lang', models.IntegerField()),
                ('email', models.CharField(max_length=255, unique=True)),
                ('lost_password_code', models.CharField(max_length=255)),
                ('session_token', models.CharField(max_length=255)),
                ('last_login', models.DateTimeField(auto_now_add=True, null=True)),
                ('user_access', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=50)),
                ('inventory_role_id', models.IntegerField()),
                ('inventory_enabled', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'mt_admin_user',
                'managed': True,
            },
        ),
    ]
